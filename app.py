import streamlit as st
import pandas as pd
from ozon_core_cleaned_fixed import calculate_all
import matplotlib.pyplot as plt
from openai import OpenAI
import streamlit as st
import openai

openai.api_key = st.secrets["OPENAI_API_KEY"]

st.set_page_config(page_title="Ozon Margin Analyzer", layout="wide")
st.title("üßæ Ozon Margin Analyzer")
st.subheader("üöÄ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç –∏ –≤–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–∏")

# –í–≤–æ–¥ –∫–ª—é—á–µ–π
with st.sidebar:
    st.markdown("üîê **API-–∫–ª—é—á–∏ Ozon**")
    api_key = st.text_input("API –∫–ª—é—á Ozon", type="password")
    perf_key = st.text_input("API –∫–ª—é—á Performance API", type="password")
    client_id = st.text_input("Client ID (Seller ID)", type="default")
    perf_client_id = st.text_input("Performance Client ID")
    st.markdown("–ö–ª—é—á–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —Å–µ—Å—Å–∏–∏ –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.")

# –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –≤–≤–æ–¥–∞ –ø—Ä–∞–π—Å–∞
st.markdown("### üì¶ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç –∏–ª–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Ä—É—á–Ω—É—é")
upload_method = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±:", ["–ó–∞–≥—Ä—É–∑–∏—Ç—å Excel", "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é"])

price = None

if upload_method == "–ó–∞–≥—Ä—É–∑–∏—Ç—å Excel":
    uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ .xlsx —Ñ–∞–π–ª —Å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–º", type="xlsx")
    if uploaded_file is not None:
        try:
            price = pd.read_excel(uploaded_file)
            st.success("–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω.")
            st.dataframe(price)
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ Excel-—Ñ–∞–π–ª–∞: {e}")
else:
    st.info("‚ö†Ô∏è –†—É—á–Ω–æ–π –≤–≤–æ–¥ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Excel.")

# –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞
if st.button("üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å (—ç—Ç–∞–ø 2)"):
    if not api_key or not perf_key or not client_id or price is None:
        st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–∞–π—Å.")
    else:
        with st.spinner("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ä–∞—Å—á—ë—Ç..."):
            try:
                results = calculate_all(api_key, perf_key, perf_client_id, price, client_id)
                st.session_state.results = results
                st.success("–†–∞—Å—á—ë—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")

                # –û—Ç–¥–µ–ª—å–Ω–æ —Ä–µ–Ω–¥–µ—Ä–∏–º —Ç–∞–±–ª–∏—Ü—ã
                for name, value in results.items():
                    st.subheader(f"{name}")
                    if isinstance(value, plt.Figure):
                        st.pyplot(value)
                    else:
                        st.dataframe(value, use_container_width=True)

            except Exception as e:
                st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

if st.button("üß† –ê–Ω–∞–ª–∏–∑ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π —Å –ø–æ–º–æ—â—å—é –ò–ò"):
    with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç—á—ë—Ç—ã..."):
        try:
            full_report = ""
            for name, table in st.session_state.results.items():
                if isinstance(table, pd.DataFrame):
                    full_report += f"\n\n{name}:\n{table.head(20).to_string(index=False)}"
                elif isinstance(table, dict):
                    for k, v in table.items():
                        full_report += f"\n\n{name} ‚Äì {k}: {v}"
                else:
                    full_report += f"\n\n{name}: {table}"

            prompt = (
    "–¢—ã ‚Äî AI-–∞–Ω–∞–ª–∏—Ç–∏–∫, –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –º–∞—Ä–∂–∏ –¥–ª—è Ozon. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–æ–¥—Ä–æ–±–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ–Ω—è—Ç–Ω—ã–π –æ—Ç—á—ë—Ç –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞.\n\n"
    "–¢—ã –ø–æ–ª—É—á–∞–µ—à—å —à–µ—Å—Ç—å –æ—Ç—á—ë—Ç–æ–≤:\n"
    "1. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–¥–∞–∂ –∑–∞ –≤—á–µ—Ä–∞.\n"
    "2. –≠–∫–æ–Ω–æ–º–∏–∫–∞ –ø–æ SKU –∑–∞ –≤—á–µ—Ä–∞.\n"
    "3. –û–±—â–∞—è –º–∞—Ä–∂–∞ –ø–æ –∞–∫–∫–∞—É–Ω—Ç—É –∑–∞ –≤—á–µ—Ä–∞.\n"
    "4. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–¥–∞–∂ —Å –Ω–∞—á–∞–ª–∞ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞.\n"
    "5. –≠–∫–æ–Ω–æ–º–∏–∫–∞ –ø–æ SKU —Å –Ω–∞—á–∞–ª–∞ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞.\n"
    "6. –û–±—â–∞—è –º–∞—Ä–∂–∞ –ø–æ –∞–∫–∫–∞—É–Ω—Ç—É —Å –Ω–∞—á–∞–ª–∞ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞.\n\n"
    "–¢–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è:\n"
    "1. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–∏–Ω–∞–º–∏–∫—É –ø—Ä–æ–¥–∞–∂, —Å—Ä–∞–≤–Ω–∏–≤ –≤—á–µ—Ä–∞—à–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ —Å –º–µ—Å—è—á–Ω—ã–º–∏ —Ç—Ä–µ–Ω–¥–∞–º–∏. –û—Ç–º–µ—Ç—å –∑–∞–º–µ—Ç–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ –∞–Ω–æ–º–∞–ª–∏–∏.\n"
    "2. –í—ã–¥–µ–ª–∏ —Ç–æ–≤–∞—Ä—ã —Å –Ω–∏–∑–∫–æ–π –º–∞—Ä–∂–æ–π (–Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è), —É–∫–∞–∂–∏ –∏—Ö SKU –∏ –º–∞—Ä–∂—É, –¥–∞–π –∫—Ä–∞—Ç–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é.\n"
    "3. –ü–æ–¥—Å–≤–µ—Ç–∏ –∫—Ä—É–ø–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã, —É–∫–∞–∑–∞–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –≤–ª–∏—è—é—Ç –Ω–∞ –º–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å.\n"
    "4. –û–ø–∏—à–∏ –æ–±—â–∏–π —Ç—Ä–µ–Ω–¥ –º–∞—Ä–∂–∏ –∏ –∑–∞—Ç—Ä–∞—Ç –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü, —É–∫–∞–∑–∞–≤, —É–ª—É—á—à–∞–µ—Ç—Å—è —Å–∏—Ç—É–∞—Ü–∏—è –∏–ª–∏ —É—Ö—É–¥—à–∞–µ—Ç—Å—è.\n"
    "5. –°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –≤—ã–≤–æ–¥—ã –∏ –¥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –æ–±—â–µ–π –º–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–¥–∞–∂.\n\n"
    "–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:\n"
    "–ê–Ω–∞–ª–∏–∑ –¥–∏–Ω–∞–º–∏–∫–∏ –ø—Ä–æ–¥–∞–∂:\n"
    "-\n"
    "–¢–æ–≤–∞—Ä—ã —Å –Ω–∏–∑–∫–æ–π –º–∞—Ä–∂–æ–π:\n"
    "-\n"
    "–í—ã—Å–æ–∫–∏–µ –∑–∞—Ç—Ä–∞—Ç—ã:\n"
    "-\n"
    "–û–±—â–∏–π —Ç—Ä–µ–Ω–¥ –∑–∞ –º–µ—Å—è—Ü:\n"
    "-\n"
    "–í—ã–≤–æ–¥—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n"
    "-\n\n"
    f"{full_report}"
)

            client = OpenAI(api_key=st.secrets["OPENAI_API_KEY"])
            response = client.chat.completions.create(
                model="gpt-4",
                messages=[{"role": "user", "content": prompt}],
                temperature=0.3,
                max_tokens=1000
            )

            st.subheader("üìã GPT-–∞–Ω–∞–ª–∏–∑ –æ—Ç—á—ë—Ç–æ–≤")
            st.write(response.choices[0].message.content)

        except Exception as e:
            st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {e}")
