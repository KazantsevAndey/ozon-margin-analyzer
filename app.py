import streamlit as st
import pandas as pd
from ozon_core_cleaned_fixed import calculate_all
import matplotlib.pyplot as plt

st.set_page_config(page_title="Ozon Margin Analyzer", layout="wide")
st.title("üßæ Ozon Margin Analyzer")
st.subheader("üöÄ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç –∏ –≤–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–∏")

# –í–≤–æ–¥ –∫–ª—é—á–µ–π
with st.sidebar:
    st.markdown("üîê **API-–∫–ª—é—á–∏ Ozon**")
    api_key = st.text_input("API –∫–ª—é—á Ozon", type="password")
    perf_key = st.text_input("API –∫–ª—é—á Performance API", type="password")
    client_id = st.text_input("Client ID (Seller ID)", type="default")
    perf_client_id = st.text_input("Performance Client ID")
    st.markdown("–ö–ª—é—á–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —Å–µ—Å—Å–∏–∏ –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.")

# –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –≤–≤–æ–¥–∞ –ø—Ä–∞–π—Å–∞
st.markdown("### üì¶ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç –∏–ª–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Ä—É—á–Ω—É—é")
upload_method = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±:", ["–ó–∞–≥—Ä—É–∑–∏—Ç—å Excel", "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é"])

price = None

if upload_method == "–ó–∞–≥—Ä—É–∑–∏—Ç—å Excel":
    uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ .xlsx —Ñ–∞–π–ª —Å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–º", type="xlsx")
    if uploaded_file is not None:
        try:
            price = pd.read_excel(uploaded_file)
            st.success("–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω.")
            st.dataframe(price)
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ Excel-—Ñ–∞–π–ª–∞: {e}")
else:
    st.info("‚ö†Ô∏è –†—É—á–Ω–æ–π –≤–≤–æ–¥ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Excel.")

# –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞
if st.button("üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å (—ç—Ç–∞–ø 2)"):
    if not api_key or not perf_key or not client_id or price is None:
        st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–∞–π—Å.")
    else:
        with st.spinner("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ä–∞—Å—á—ë—Ç..."):
            try:
                results = calculate_all(api_key, perf_key, perf_client_id, price, client_id)
                st.success("–†–∞—Å—á—ë—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")

                # –û—Ç–¥–µ–ª—å–Ω–æ —Ä–µ–Ω–¥–µ—Ä–∏–º —Ç–∞–±–ª–∏—Ü—ã
                for name, table in results.items():
                    if not isinstance(table, plt.Figure):
                        st.subheader(f"üìã {name}")
                        st.dataframe(table, use_container_width=True)

# –û—Ç–¥–µ–ª—å–Ω–æ —Ä–µ–Ω–¥–µ—Ä–∏–º –≥—Ä–∞—Ñ–∏–∫–∏
                if "üìä –ì—Ä–∞—Ñ–∏–∫: –û—Ç–≥—Ä—É–∑–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (–≤—á–µ—Ä–∞)" in results:
                    st.subheader("üìä –û—Ç–≥—Ä—É–∑–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (–≤—á–µ—Ä–∞)")
                    st.pyplot(results["üìä –ì—Ä–∞—Ñ–∏–∫: –û—Ç–≥—Ä—É–∑–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (–≤—á–µ—Ä–∞)"])

                if "üìä –ì—Ä–∞—Ñ–∏–∫: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ—Ç–≥—Ä—É–∑–∫–∏ –∏ –ø—Ä–∏–±—ã–ª–∏" in results:
                    st.subheader("üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ—Ç–≥—Ä—É–∑–∫–∏ –∏ –ø—Ä–∏–±—ã–ª–∏")
                    st.pyplot(results["üìä –ì—Ä–∞—Ñ–∏–∫: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ—Ç–≥—Ä—É–∑–∫–∏ –∏ –ø—Ä–∏–±—ã–ª–∏"])

                if "üìä –ì—Ä–∞—Ñ–∏–∫: –û—Ç–≥—Ä—É–∑–∫–∞ vs –ü—Ä–∏–±—ã–ª—å (—Å—Ç–æ–ª–±–∏–∫–∏)" in results:
                    st.subheader("üìä –û—Ç–≥—Ä—É–∑–∫–∞ vs –ü—Ä–∏–±—ã–ª—å (—Å—Ç–æ–ª–±–∏–∫–∏)")
                    st.pyplot(results["üìä –ì—Ä–∞—Ñ–∏–∫: –û—Ç–≥—Ä—É–∑–∫–∞ vs –ü—Ä–∏–±—ã–ª—å (—Å—Ç–æ–ª–±–∏–∫–∏)"])

                if "üìä –ì—Ä–∞—Ñ–∏–∫: Top-15 SKU –ø–æ –æ—Ç–≥—Ä—É–∑–∫–µ" in results:
                    st.subheader("üìä Top-15 SKU –ø–æ –æ—Ç–≥—Ä—É–∑–∫–µ")
                    st.pyplot(results["üìä –ì—Ä–∞—Ñ–∏–∫: Top-15 SKU –ø–æ –æ—Ç–≥—Ä—É–∑–∫–µ"])

            except Exception as e:
                st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
